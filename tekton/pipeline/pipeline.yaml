apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: hello-pipeline
  namespace: hello # Certifique-se de usar o namespace correto
spec:
  description: A pipeline that clones a git repository and reads README files.
  params:
    - name: repo-url
      type: string
      description: The git repo URL to clone from.
      default: "https://github.com/marcelobruckner/hello-app"
    - name: image
      type: string
      description: The image name to build.
      default: "marcelobruckner/hello"
    - name: dockerfile
      type: string
      description: The path to the Dockerfile.
      default: "./Dockerfile"
    - name: context
      type: string
      description: The path to the build context.
      default: "."
  workspaces:
    - name: shared-data
      description: |
        This workspace contains the cloned repo files, so they can be read by the
        next task.
  tasks:
    # Clones the git repository into the shared workspace.
    - name: fetch-source
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: URL
          value: $(params.repo-url)

    # Builds the image using Buildah.
    # - name: build-image
    #   runAfter:
    #     - fetch-source
    #   taskRef:
    #     resolver: cluster
    #     params:
    #       - name: kind
    #         value: task
    #       - name: name
    #         value: buildah
    #       - name: namespace
    #         value: openshift-pipelines
    #   workspaces:
    #     - name: source
    #       workspace: shared-data
    #   params:
    #     - name: repo-url
    #       value: "$(params.repo-url)"
    #     - name: IMAGE
    #       value: "$(params.image)"

    # Ajustando o SHA da imagem
    # - name: adjust-sha-image-generated
    #   runAfter:
    #     - build-image
    #   taskRef:
    #     name: adjust-sha-image-generated
    #   workspaces:
    #     - name: source
    #       workspace: shared-data
    #   params:
    #     - name: IMAGE_DIGEST
    #       value: "$(tasks.build-image.results.IMAGE_DIGEST)"

    # Builds the image using Buildah SHA.
    # - name: build-image-sha
    #   runAfter:
    #     - adjust-sha-image-generated
    #   taskRef:
    #     resolver: cluster
    #     params:
    #       - name: kind
    #         value: task
    #       - name: name
    #         value: buildah
    #       - name: namespace
    #         value: openshift-pipelines
    #   workspaces:
    #     - name: source
    #       workspace: shared-data
    #   params:
    #     - name: repo-url
    #       value: "$(params.repo-url)"
    #     - name: IMAGE
    #       value: "$(params.image):$(tasks.adjust-sha-image-generated.results.DIGEST)"

    # Builds the image using Buildah.
    - name: build-image
      runAfter:
        - fetch-source
      taskRef:
        name: buildah-customized
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: repo-url
          value: "$(params.repo-url)"
        - name: IMAGE
          value: "$(params.image)"

    # update manifest
    - name: update-manifest
      runAfter:
        - build-image
      taskRef:
        name: kustomize-update-manifest
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: IMAGE
          value: "$(tasks.build-image.results.DIGEST)"
        - name: KUSTOMIZE_PATH
          value: "k8s/"

    # Commits and pushes the changes to the git repository.
    - name: git-commit-manifest
      runAfter:
        - update-manifest
      taskRef:
        name: git-commit-manifest
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: GIT_REPO
          value: $(params.repo-url)
        - name: GIT_BRANCH
          value: "main"
        # - name: GIT_USER_NAME
        #   value: "marcelobruckner"
        # - name: GIT_USER_EMAIL
        #   value: "marcelobruckner@gmail.com"
